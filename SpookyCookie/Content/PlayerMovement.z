// Authors: Charles duMars, Arthur Bouvier
// All content Â© 2017 DigiPen (USA) Corporation, all rights reserved.
class PlayerMovement : ZilchComponent
{
    [Dependency]
    var RBody : RigidBody = null;
    var Beam : Cog = null;
    [Property]
    var Speed : Real = 1;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        this.Beam = this.Owner.FindChildByName("Beam");
    }
    function OnLogicUpdate(event : UpdateEvent)
    {
        var dir = Integer2(0,0);
        if(Zero.Keyboard.KeyIsDown(Keys.Control) && Zero.Keyboard.KeyIsDown(Keys.G))
        {
            this.Space.LoadLevel(Level.Kitchen);
        }
        if(this.Owner.FearManager.Spooked)
            return;
        
        if(Zero.Keyboard.KeyIsDown(Keys.A) || Zero.Keyboard.KeyIsDown(Keys.Left))
        {
            dir.X = -1;
            if(this.Owner.Sprite.SpriteSource != SpriteSource.Character_Left_Side)
                this.Owner.Sprite.SpriteSource = SpriteSource.Character_Left_Side;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.D) || Zero.Keyboard.KeyIsDown(Keys.Right))
        {
            dir.X = 1;
            if(this.Owner.Sprite.SpriteSource != SpriteSource.Character_Right_Side_1)
                this.Owner.Sprite.SpriteSource = SpriteSource.Character_Right_Side_1;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.W) || Zero.Keyboard.KeyIsDown(Keys.Up))
        {
            dir.Y = 1;
            if(dir.X == 0 && this.Owner.Sprite.SpriteSource != SpriteSource.Character_Up)
                this.Owner.Sprite.SpriteSource = SpriteSource.Character_Up;
        }
        else if(Zero.Keyboard.KeyIsDown(Keys.S) || Zero.Keyboard.KeyIsDown(Keys.Down))
        {
            dir.Y = -1;
            if(dir.X == 0 &&this.Owner.Sprite.SpriteSource != SpriteSource.Character_Front_2)
                this.Owner.Sprite.SpriteSource = SpriteSource.Character_Front_2;
        }
        if(dir == Integer2(0,0))
        {
            this.Owner.Sprite.CurrentFrame = 0;
            this.Owner.Sprite.AnimationActive = false;
        }
        else
        {
            if (dir.X != 0) {
                this.Beam.Transform.Scale = Real3(5, 1, 1);
                this.Beam.Transform.Translation = Real3(3*dir.X, 0, 0);
                this.Beam.BoxCollider.Size = Real3(1, 1, 1);
            } else if (dir.Y != 0) {
                this.Beam.Transform.Scale = Real3(1, 5, 1);
                this.Beam.Transform.Translation = Real3(0, 3*dir.Y, 0);
                this.Beam.BoxCollider.Size = Real3(1, 1, 1);
            }
            this.Owner.Sprite.AnimationActive = true;
        }
        this.Owner.RigidBody.Velocity = Real3(dir*Real2(this.Speed, this.Speed), 0);
    }
}
